{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","searchInputValue","setSearchInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","gifResponse","json","data","gifs","map","gif","images","downsized","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","console","log","c","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEKC,mBAAS,IAFd,mBAEnCC,EAFmC,KAElBC,EAFkB,KAgB1C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAiBK,OAAOC,OAAO,GAC9BR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAAmCO,QAMrD,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GAC7BF,EAAoBE,EAAEQ,OAAOF,a,QCNxBG,EAAc,SAAC,GAAiB,EAAhBC,GAAiB,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IAElC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCPHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,+FAGL,EACRN,EAJa,iDAImCO,UAAUF,GAJ7C,yEAGL,GAHK,SAMOG,MAAMR,GANb,cAMbS,EANa,gBAOEA,EAAYC,OAPd,uBAOZC,EAPY,EAOZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAGgB,EAAIhB,GACPC,MAAMe,EAAIf,MACVC,IAAIc,EAAIC,OAAOC,UAAUhB,QAbd,kBAiBZY,GAjBY,4CAAH,sDCKPK,EAAU,SAAC,GAAc,IAAbZ,EAAY,EAAZA,SAAY,ECFT,SAACA,GAAY,IAAD,EAEXrB,mBAAS,CAC9B2B,KAAK,GACLO,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEvBC,EAFuB,KAepC,OARAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GAAI,OAAEH,EAAS,CACjBT,KAAKY,EACLL,SAAQ,SAElB,CAACb,IAEIc,EDXuBK,CAAanB,GAA/BU,EAFqB,EAE1BJ,KAAYO,EAFc,EAEdA,QAEnB,OACI,qCACI,6BAAKb,IAEJa,GAAW,mBAAGjB,UAAW,oCAAd,qBAEZ,oBAAIA,UAAU,iBAAd,SACKc,EAAOF,KAAI,SAACY,GAAD,OACR,cAAC,EAAD,aAAaxB,UAAW,QAAyBwB,GAAZA,EAAI3B,aEa7C4B,EA1BK,WAAK,IAAD,EAGc1C,mBAAS,CAAC,SAHxB,mBAGdQ,EAHc,KAGHT,EAHG,KASrB,OAJAsC,qBAAU,WACNM,QAAQC,IAAIpC,KACd,CAACA,IAGC,qCACI,8CACA,cAAC,EAAD,CAAaT,cAAeA,IAC5B,uBAEA,6BAEQS,EAAWqB,KAAI,SAAAgB,GAAC,OACZ,cAAC,EAAD,CAAiBxB,SAAUwB,GAAbA,YChBtCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e140d10b.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropsTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories})=>{\n\n    const [searchInputValue,setSearchInputValue] = useState('');\n\n    const handleSearchInputChange = (e) =>{\n        setSearchInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(searchInputValue.trim().length>2){\n            setCategories((categories)=>[searchInputValue,...categories]);\n        }\n\n    };\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={searchInputValue}\n                onChange={handleSearchInputChange}\n            />\n        </form>\n    )\n\n};\n\n\nAddCategory.propTypes= {\n    setCategories:PropsTypes.func.isRequired\n};","import React from 'react';\n\nexport const GifGridItem = ({id,title,url})=>{\n\n    return (\n        <div className=\"card animate__animated animate__wobble\" >\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}","export const getGifs = async(category)=>{\n\n    const apiKey = `yz0xfOSfAjN4fPbkDsHrt4gzuSxT19dg`;\n    const limit = 9;\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=${apiKey}&limit=${limit}`;\n\n    const gifResponse = await fetch(url);\n    const {data} = await gifResponse.json();\n\n    const gifs = data.map(gif=>{\n        return {\n            id:gif.id,\n            title:gif.title,\n            url:gif.images.downsized.url\n        }\n    });\n\n    return gifs;\n};","import React from 'react'\nimport {GifGridItem} from \"./GifGridItem\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\n\n\nexport const GifGrid = ({category})=>{\n\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            {loading && <p className={\"animate__animated animate__wobble\"}>Loading</p>}\n\n            <ol className=\"categoriesGrid\">\n                {images.map((img)=>\n                    <GifGridItem className={\"card\"} key={img.id} {...img}\n                    />\n                )}\n            </ol>\n        </>\n    )\n}","import {useState,useEffect} from 'react';\nimport {getGifs} from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category)=>{\n\n    const [state,setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n            .then(imgs=>setState({\n                data:imgs,\n                loading:false\n            }));\n    },[category])\n\n    return state;\n\n}","import React,{useState,useEffect} from 'react';\nimport {AddCategory} from \"./components/AddCategory\";\nimport {GifGrid} from \"./components/GifGrid\";\n\nconst GifExpertApp = ()=>{\n\n\n    const [categories,setCategories] = useState(['Keys']);\n\n    useEffect(()=>{\n        console.log(categories);\n    },[categories])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(c=>(\n                        <GifGrid key={c} category={c}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n};\n\nexport default  GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}